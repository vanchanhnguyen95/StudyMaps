Em nghiên cứu thêm thì đang hiểu thực hiện các phần và hiểu như sau ạ:

Mục I. Dữ liệu sử dụng tìm kiếm
 - Là dữ liệu các file .ba init ban đầu (ngầm khởi tạo dữ liệu).
 - Dữ liệu đang chạy init gồm:
	+ dữ liệu vùng (tỉnh/thành, quận/huyện, xã/phường, dữ liệu vùng tìm kiếm, dữ liệu quận/huyện ưu tiên thấp khi tìm kiếm)
	+ dữ liệu khu đô thị
	+ dữ liệu từ khóa tìm kiếm
	+ dữ liệu địa điểm
	+ dữ liệu đường
		
Mục II. Đã convert source lên Net 7, chạy Api Tọa độ - địa chỉ giống với source code anh Tuấn gửi
- Source code đã cho bỏ đi các phần liên quan đến sql
- Source code ko sử dụng project .Dal
- Thư viện RTree để tìm kiếm theo tọa độ, Thư viện KDTree để tìm node gần nhất, thư viện GDAL có convert nhưng chưa thấy api tọa độ - địa chỉ dùng đến.

Mục III. Nghiên cứu Api Tọa độ - địa chỉ đang hiểu là thực hiện như sau:
	1. Dùng hằng số DISTANCE_INTERSECT_ROAD = 0.0002f
	2. Khởi tạo vùng tìm kiếm (Sử dụng thư viện RTree)
		RTRectangle rec = new RTRectangle(pts.Lng - DISTANCE_INTERSECT_ROAD, pts.Lat - DISTANCE_INTERSECT_ROAD, pts.Lng + DISTANCE_INTERSECT_ROAD, pts.Lat + DISTANCE_INTERSECT_ROAD, 0.0f, 0.0f);
	3. Lấy vùng theo tọa độ (Sử dụng thư viện RTree)
		3.1 Xác định vùng tìm kiếm
			- Ban đầu khi load dữ liệu đã có load Danh sách dữ liệu vùng:
				Sử dụng thuật toán RTree.Intersects để xác định vùng theo tọa độ, 1 vùng đã có ID vùng:
		3.2. Nếu vùng tìm kiếm có dữ liệu thì tiến hành:
			- Ban đầu khi load dữ liệu đã có load Danh sách dữ liệu vùng:
				Sử dụng thuật toán RTree.Intersects để xác định vùng theo tọa độ
				1 vùng đã có ID vùng: CommuneID, Danh sách các điểm trong vùng PointList
				Dùng thuật toán "Kiểm tra điểm trong vùng" từ danh sách PointList đã init ban đầu
				Từ đó xác định được xã/phường, quận/huyện, tỉnh/thành
	4. Tìm kiếm theo dữ liệu của Bình Anh
		4.1 Ưu tiên tìm khu đô thị (Lấy khu đô thị theo tọa độ)
			Tiến hành tìm kiếm: Xác định ô đất => lô đất => khu đô thị
		4.2 Nếu 4.1 không có kết quả thì tìm theo đường (Tìm đường theo tọa độ)
			Sử dụng thư viện KDTree Xác định lại khung tìm kiếm : BAGPoint neighbor = NodeDetect(kdt, pts);
			Sử dụng thư viện KDTree để Xác định node gần nhất để tìm node gần nhất
			- Tiến hành tìm kiếm:
				+ Xác định đoạn đường theo tọa độ: có sử dụng hằng số DISTANCE_INTERSECT_EPSILON = 0.0005f;
				+ Tính toán số nhà
			
Anh Hòa, anh Tuấn xem giúp em đã hiểu các phần như trên ổn ko?, em có các thắc mắc này nữa nhé:
- Ở Mục III  có đang dùng hằng số DISTANCE_INTERSECT_ROAD = 0.0002f, hằng số DISTANCE_INTERSECT_EPSILON = 0.0005f 
em đang chưa rõ các hằng số tính từ công thức nào ạ?
- Ở mục III3.2.  có danh sách PointList đã được init ban đầu, em đang hiểu mỗi đối tượng trong danh sách PointList
là 1 vùng, bao gồm nhiều điểm bao quanh, 1 vùng này là 1 xã/phường của Việt Nam.
 Nếu đúng như vậy thì chỉ chỉ cần chuẩn bị dữ liệu vùng này cho tất cả các xã/phường của Việt Nam và vùng này được bao bới nhiều điểm càng chi tiết các tốt
 thì lúc đó Api Tọa độ - địa chỉ cho kết quả càng chính xác
- Thư viện GDAL em tìm hiểu thì nó dùng để hỗ trợ đọc dữ liệu, import dữ liệu không gian địa lý đúng ko ạ?
Khi convert source sang Net 7 em có convert thư viện GDAL, phần em đang nghiên cứu thì có sử dụng thư viện GDAL nhưng lại liên quan đến project .DAL,
em đã ẩn các phần liên quan đến project. GDAL, nhờ anh giải thích thêm các phần sử dụng thư viện GDAl ạ?
- Em đang hiểu lỗi khi dịch ứng dụng này ở dạng 32bit nhưng sang 64 bit ko đc có nghĩa là đang dịch source code trên nên Net 7 cho thư viện GDAL ko đc đúng ko ạ?